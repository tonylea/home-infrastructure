name: Deploy to Local Infra

on:
  push:
    branches: [main]

jobs:
  test:
    name: Validate Infrastructure Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: YAML Lint
        run: |
          pip install yamllint
          yamllint .

      - name: Terraform Validate
        working-directory: terraform/cloudflare
        run: |
          terraform init
          terraform validate

      - name: Ansible Syntax Check
        working-directory: ansible
        run: |
          ansible-playbook --syntax-check playbooks/setup-local-volumes.yml

  terraform:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Terraform Init & Apply
        working-directory: terraform/cloudflare
        env:
          TF_VAR_cloudflare_api_token: ${{ secrets.CF_API_TOKEN }}
          TF_VAR_public_domain: ${{ secrets.PUBLIC_DOMAIN }}
          TF_TOKEN_app_terraform_io: ${{ secrets.TF_CLOUD_TOKEN }}
        run: |
          terraform init
          terraform apply -auto-approve

  deploy:
    needs: terraform
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Install tools
        run: chmod +x ./scripts/setup.sh && ./scripts/setup.sh

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.K8S_SSH_PRIVATE_KEY }}

      - name: Prepare Local Volume & Manifests
        run: |
          ansible-playbook -i ansible/inventory.yml ansible/playbooks/setup-local-volumes.yml

      - name: Create cloudflared tunnel secret in Kubernetes
        env:
          TUNNEL_SECRET_B64: ${{ secrets.CF_TUNNEL_SECRET_B64 }}
        run: |
          echo "$TUNNEL_SECRET_B64" | base64 --decode > ./tunnel.json
          kubectl create ns ingress-public || true
          kubectl create secret generic cloudflared-tunnel \
            --from-file=tunnel.json=./tunnel.json \
            -n ingress-public --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy Traefik with Helm
        env:
          PUBLIC_DOMAIN: ${{ secrets.PUBLIC_DOMAIN }}
          CF_TUNNEL_NAME: ${{ secrets.CF_TUNNEL_NAME }}
          CONTACT_EMAIL: ${{ secrets.CONTACT_EMAIL }}
        run: |
          helm repo add traefik https://traefik.github.io/charts
          helm repo update
          helm upgrade --install traefik-public traefik/traefik \
            --namespace ingress-public \
            --create-namespace \
            --values helm/traefik-public/values.yaml \
            --set-string publicDomain=$PUBLIC_DOMAIN \
            --set-string tunnelName=$CF_TUNNEL_NAME \
            --set-string contactEmail=$CONTACT_EMAIL

      - name: Apply Traefik IngressRoute manifest
        run: |
          kubectl apply -f ~/media-config/traefik/traefik-public-ingressroute.yaml
